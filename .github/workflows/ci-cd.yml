name: Portfolio CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  Run-Linters:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: npm install -g yarn
      - run: yarn
      - run: yarn lint
      - run: echo "🍏 This job's status is ${{ job.status }}."
  Run-Tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Tests are running"
      - run: echo "🍏 This job's status is ${{ job.status }}."
    needs: Run-Linters
  Build-Deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 building and deploying the application in AWS with Terraform"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: fmt
        working-directory: ./iac
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        working-directory: ./iac
        run: terraform init -input=false
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        working-directory: ./iac
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        working-directory: ./iac
        run: terraform apply -auto-approve -input=false
    needs: [Run-Linters, Run-Tests]
